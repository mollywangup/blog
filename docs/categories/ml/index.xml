<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>ML on Molly's Blog</title><link>https://mollywangup.com/categories/ml/</link><description>Recent content in ML on Molly's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>mollywangup@gmail.com (Molly Wang)</managingEditor><webMaster>mollywangup@gmail.com (Molly Wang)</webMaster><copyright>©2025, All content is licensed under<a target="_blank" rel="external noopener" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a>.</copyright><lastBuildDate>Sat, 21 Oct 2023 12:36:53 +0000</lastBuildDate><atom:link href="https://mollywangup.com/categories/ml/index.xml" rel="self" type="application/rss+xml"/><item><title>学习笔记：吴恩达深度学习</title><link>https://mollywangup.com/posts/notes-deep-learning/</link><pubDate>Sat, 21 Oct 2023 12:36:53 +0000</pubDate><author>mollywangup@gmail.com (Molly Wang)</author><atom:modified>Sat, 21 Oct 2023 12:36:53 +0000</atom:modified><guid>https://mollywangup.com/posts/notes-deep-learning/</guid><description>挖坑中&amp;hellip; 激活函数 为了在神经网络中将线性输出转化为非线性输出。 结论： 隐藏层建议使用 ReLU； 输出层根据预测值选择： 二分类问题：S</description><dc:creator>Molly Wang</dc:creator><category>Deep Learning</category><category>TensorFlow</category><category>ML</category><category>Notes</category></item><item><title>Matplotlib 绘图实践</title><link>https://mollywangup.com/posts/practice-of-matplotlib/</link><pubDate>Thu, 19 Oct 2023 05:26:51 +0000</pubDate><author>mollywangup@gmail.com (Molly Wang)</author><atom:modified>Thu, 19 Oct 2023 05:26:51 +0000</atom:modified><guid>https://mollywangup.com/posts/practice-of-matplotlib/</guid><description>概率分布 二项分布 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 import numpy as np import matplotlib.pyplot as plt from scipy.stats import binom def runplt(n:</description><dc:creator>Molly Wang</dc:creator><category>Matplotlib</category><category>ML</category></item><item><title>机器学习实践 - 垃圾邮件分类器</title><link>https://mollywangup.com/posts/practice-of-ml-classification/</link><pubDate>Thu, 12 Oct 2023 10:20:28 +0000</pubDate><author>mollywangup@gmail.com (Molly Wang)</author><atom:modified>Thu, 12 Oct 2023 10:20:28 +0000</atom:modified><guid>https://mollywangup.com/posts/practice-of-ml-classification/</guid><description>数据源：SMS Spam Collection 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59</description><dc:creator>Molly Wang</dc:creator><category>sklearn</category><category>Classification</category><category>ML</category></item><item><title>机器学习实践 - 聚类问题</title><link>https://mollywangup.com/posts/practice-of-ml-clustering/</link><pubDate>Mon, 07 Aug 2023 18:36:17 +0000</pubDate><author>mollywangup@gmail.com (Molly Wang)</author><atom:modified>Mon, 07 Aug 2023 18:36:17 +0000</atom:modified><guid>https://mollywangup.com/posts/practice-of-ml-clustering/</guid><description>K-means 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 import time import numpy as np import matplotlib.pyplot as plt from sklearn.datasets import make_blobs from sklearn.cluster import KMeans from sklearn.metrics.pairwise import</description><dc:creator>Molly Wang</dc:creator><category>sklearn</category><category>Clustering</category><category>ML</category></item><item><title>机器学习实践 - 回归问题</title><link>https://mollywangup.com/posts/practice-of-ml-regression/</link><pubDate>Sun, 06 Aug 2023 10:17:47 +0000</pubDate><author>mollywangup@gmail.com (Molly Wang)</author><atom:modified>Sun, 06 Aug 2023 10:17:47 +0000</atom:modified><guid>https://mollywangup.com/posts/practice-of-ml-regression/</guid><description>一元线性回归 以下示例来源于 sklearn 的糖尿病数据集。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 import numpy as np import matplotlib.pyplot as plt from</description><dc:creator>Molly Wang</dc:creator><category>sklearn</category><category>Regression</category><category>ML</category></item><item><title>学习笔记：吴恩达机器学习</title><link>https://mollywangup.com/posts/notes-machine-learning/</link><pubDate>Fri, 04 Aug 2023 08:09:47 +0000</pubDate><author>mollywangup@gmail.com (Molly Wang)</author><atom:modified>Fri, 04 Aug 2023 08:09:47 +0000</atom:modified><guid>https://mollywangup.com/posts/notes-machine-learning/</guid><description>本笔记基于以下学习资料（侧重实际应用）： 入门机器学习：(强推|双字)2022吴恩达机器学习Deeplearning.ai课程 Python 代码库：sci</description><dc:creator>Molly Wang</dc:creator><category>sklearn</category><category>ML</category><category>Notes</category></item></channel></rss>